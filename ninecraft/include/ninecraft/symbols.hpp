#ifndef MCPER_SYMBOLS
#define MCPER_SYMBOLS

const char *gles_1_symbols[] = {
    "glActiveTexture",
    "glAlphaFunc",
    "glAlphaFuncx",
    "glAlphaFuncxOES",
    "glBindBuffer",
    "glBindFramebufferOES",
    "glBindRenderbufferOES",
    "glBindTexture",
    "glBindVertexArrayOES",
    "glBlendEquationOES",
    "glBlendEquationSeparateOES",
    "glBlendFunc",
    "glBlendFuncSeparateOES",
    "glBufferData",
    "glBufferSubData",
    "glCheckFramebufferStatusOES",
    "glClear",
    "glClearColor",
    "glClearColorx",
    "glClearColorxOES",
    "glClearDepthf",
    "glClearDepthfOES",
    "glClearDepthx",
    "glClearDepthxOES",
    "glClearStencil",
    "glClientActiveTexture",
    "glClipPlanef",
    "glClipPlanefIMG",
    "glClipPlanefOES",
    "glClipPlanex",
    "glClipPlanexIMG",
    "glClipPlanexOES",
    "glColor4f",
    "glColor4ub",
    "glColor4x",
    "glColor4xOES",
    "glColorMask",
    "glColorPointer",
    "glColorPointerBounds",
    "glCompressedTexImage2D",
    "glCompressedTexSubImage2D",
    "glCopyTexImage2D",
    "glCopyTexSubImage2D",
    "glCullFace",
    "glCurrentPaletteMatrixOES",
    "glDeleteBuffers",
    "glDeleteFencesNV",
    "glDeleteFramebuffersOES",
    "glDeleteRenderbuffersOES",
    "glDeleteTextures",
    "glDeleteVertexArraysOES",
    "glDepthFunc",
    "glDepthMask",
    "glDepthRangef",
    "glDepthRangefOES",
    "glDepthRangex",
    "glDepthRangexOES",
    "glDisable",
    "glDisableClientState",
    "glDisableDriverControlQCOM",
    "glDiscardFramebufferEXT",
    "glDrawArrays",
    "glDrawElements",
    "glDrawTexfOES",
    "glDrawTexfvOES",
    "glDrawTexiOES",
    "glDrawTexivOES",
    "glDrawTexsOES",
    "glDrawTexsvOES",
    "glDrawTexxOES",
    "glDrawTexxvOES",
    "glEGLImageTargetRenderbufferStorageOES",
    "glEGLImageTargetTexture2DOES",
    "glEnable",
    "glEnableClientState",
    "glEnableDriverControlQCOM",
    "glEndTilingQCOM",
    "glExtGetBufferPointervQCOM",
    "glExtGetBuffersQCOM",
    "glExtGetFramebuffersQCOM",
    "glExtGetProgramBinarySourceQCOM",
    "glExtGetProgramsQCOM",
    "glExtGetRenderbuffersQCOM",
    "glExtGetShadersQCOM",
    "glExtGetTexLevelParameterivQCOM",
    "glExtGetTexSubImageQCOM",
    "glExtGetTexturesQCOM",
    "glExtIsProgramBinaryQCOM",
    "glExtTexObjectStateOverrideiQCOM",
    "glFinish",
    "glFinishFenceNV",
    "glFlush",
    "glFogf",
    "glFogfv",
    "glFogx",
    "glFogxOES",
    "glFogxv",
    "glFogxvOES",
    "glFramebufferRenderbufferOES",
    "glFramebufferTexture2DMultisampleIMG",
    "glFramebufferTexture2DOES",
    "glFrontFace",
    "glFrustumf",
    "glFrustumfOES",
    "glFrustumx",
    "glFrustumxOES",
    "glGenBuffers",
    "glGenFencesNV",
    "glGenFramebuffersOES",
    "glGenRenderbuffersOES",
    "glGenTextures",
    "glGenVertexArraysOES",
    "glGenerateMipmapOES",
    "glGetBooleanv",
    "glGetBufferParameteriv",
    "glGetBufferPointervOES",
    "glGetClipPlanef",
    "glGetClipPlanefOES",
    "glGetClipPlanex",
    "glGetClipPlanexOES",
    "glGetDriverControlStringQCOM",
    "glGetDriverControlsQCOM",
    "glGetError",
    "glGetFenceivNV",
    "glGetFixedv",
    "glGetFixedvOES",
    "glGetFloatv",
    "glGetFramebufferAttachmentParameterivOES",
    "glGetIntegerv",
    "glGetLightfv",
    "glGetLightxv",
    "glGetLightxvOES",
    "glGetMaterialfv",
    "glGetMaterialxv",
    "glGetMaterialxvOES",
    "glGetPointerv",
    "glGetRenderbufferParameterivOES",
    "glGetString",
    "glGetTexEnvfv",
    "glGetTexEnviv",
    "glGetTexEnvxv",
    "glGetTexEnvxvOES",
    "glGetTexGenfvOES",
    "glGetTexGenivOES",
    "glGetTexGenxvOES",
    "glGetTexParameterfv",
    "glGetTexParameteriv",
    "glGetTexParameterxv",
    "glGetTexParameterxvOES",
    "glHint",
    "glIsBuffer",
    "glIsEnabled",
    "glIsFenceNV",
    "glIsFramebufferOES",
    "glIsRenderbufferOES",
    "glIsTexture",
    "glIsVertexArrayOES",
    "glLightModelf",
    "glLightModelfv",
    "glLightModelx",
    "glLightModelxOES",
    "glLightModelxv",
    "glLightModelxvOES",
    "glLightf",
    "glLightfv",
    "glLightx",
    "glLightxOES",
    "glLightxv",
    "glLightxvOES",
    "glLineWidth",
    "glLineWidthx",
    "glLineWidthxOES",
    "glLoadIdentity",
    "glLoadMatrixf",
    "glLoadMatrixx",
    "glLoadMatrixxOES",
    "glLoadPaletteFromModelViewMatrixOES",
    "glLogicOp",
    "glMapBufferOES",
    "glMaterialf",
    "glMaterialfv",
    "glMaterialx",
    "glMaterialxOES",
    "glMaterialxv",
    "glMaterialxvOES",
    "glMatrixIndexPointerOES",
    "glMatrixIndexPointerOESBounds",
    "glMatrixMode",
    "glMultMatrixf",
    "glMultMatrixx",
    "glMultMatrixxOES",
    "glMultiDrawArraysEXT",
    "glMultiDrawElementsEXT",
    "glMultiTexCoord4f",
    "glMultiTexCoord4x",
    "glMultiTexCoord4xOES",
    "glNormal3f",
    "glNormal3x",
    "glNormal3xOES",
    "glNormalPointer",
    "glNormalPointerBounds",
    "glOrthof",
    "glOrthofOES",
    "glOrthox",
    "glOrthoxOES",
    "glPixelStorei",
    "glPointParameterf",
    "glPointParameterfv",
    "glPointParameterx",
    "glPointParameterxOES",
    "glPointParameterxv",
    "glPointParameterxvOES",
    "glPointSize",
    "glPointSizePointerOES",
    "glPointSizePointerOESBounds",
    "glPointSizex",
    "glPointSizexOES",
    "glPolygonOffset",
    "glPolygonOffsetx",
    "glPolygonOffsetxOES",
    "glPopMatrix",
    "glPushMatrix",
    "glQueryMatrixxOES",
    "glReadPixels",
    "glRenderbufferStorageMultisampleIMG",
    "glRenderbufferStorageOES",
    "glRotatef",
    "glRotatex",
    "glRotatexOES",
    "glSampleCoverage",
    "glSampleCoveragex",
    "glSampleCoveragexOES",
    "glScalef",
    "glScalex",
    "glScalexOES",
    "glScissor",
    "glSetFenceNV",
    "glShadeModel",
    "glStartTilingQCOM",
    "glStencilFunc",
    "glStencilMask",
    "glStencilOp",
    "glTestFenceNV",
    "glTexCoordPointer",
    "glTexCoordPointerBounds",
    "glTexEnvf",
    "glTexEnvfv",
    "glTexEnvi",
    "glTexEnviv",
    "glTexEnvx",
    "glTexEnvxOES",
    "glTexEnvxv",
    "glTexEnvxvOES",
    "glTexGenfOES",
    "glTexGenfvOES",
    "glTexGeniOES",
    "glTexGenivOES",
    "glTexGenxOES",
    "glTexGenxvOES",
    "glTexImage2D",
    "glTexParameterf",
    "glTexParameterfv",
    "glTexParameteri",
    "glTexParameteriv",
    "glTexParameterx",
    "glTexParameterxOES",
    "glTexParameterxv",
    "glTexParameterxvOES",
    "glTexSubImage2D",
    "glTranslatef",
    "glTranslatex",
    "glTranslatexOES",
    "glUnmapBufferOES",
    "glVertexPointer",
    "glVertexPointerBounds",
    "glViewport",
    "glWeightPointerOES",
    "glWeightPointerOESBounds",
    NULL
};

const char *egl_symbols[] = {
    "eglBindAPI",
    "eglBindTexImage",
    "eglChooseConfig",
    "eglClientWaitSyncKHR",
    "eglCopyBuffers",
    "eglCreateContext",
    "eglCreateImageKHR",
    "eglCreatePbufferFromClientBuffer",
    "eglCreatePbufferSurface",
    "eglCreatePixmapSurface",
    "eglCreateSyncKHR",
    "eglCreateWindowSurface",
    "eglDestroyContext",
    "eglDestroyImageKHR",
    "eglDestroySurface",
    "eglDestroySyncKHR",
    "eglGetConfigAttrib",
    "eglGetConfigs",
    "eglGetCurrentContext",
    "eglGetCurrentDisplay",
    "eglGetCurrentSurface",
    "eglGetDisplay",
    "eglGetError",
    "eglGetProcAddress",
    "eglGetSyncAttribKHR",
    "eglGetSystemTimeFrequencyNV",
    "eglGetSystemTimeNV",
    "eglInitialize",
    "eglLockSurfaceKHR",
    "eglMakeCurrent",
    "eglPresentationTimeANDROID",
    "eglQueryAPI",
    "eglQueryContext",
    "eglQueryString",
    "eglQuerySurface",
    "eglReleaseTexImage",
    "eglReleaseThread",
    "eglSignalSyncKHR",
    "eglSurfaceAttrib",
    "eglSwapBuffers",
    "eglSwapInterval",
    "eglTerminate",
    "eglUnlockSurfaceKHR",
    "eglWaitClient",
    "eglWaitGL",
    "eglWaitNative",
    "eglWaitSyncKHR",
    NULL
};

const char *android_symbols[] = {
    "ANativeWindow_setBuffersGeometry",
    "AAssetManager_open",
    "AAsset_getLength",
    "AAsset_getBuffer",
    "AAsset_close",
    "ALooper_pollAll",
    "ANativeActivity_finish",
    "AInputQueue_getEvent",
    "AKeyEvent_getKeyCode",
    "AInputQueue_preDispatchEvent",
    "AInputQueue_finishEvent",
    "AKeyEvent_getAction",
    "AMotionEvent_getAxisValue",
    "AKeyEvent_getRepeatCount",
    "AKeyEvent_getMetaState",
    "AInputEvent_getDeviceId",
    "AInputEvent_getType",
    "AInputEvent_getSource",
    "AMotionEvent_getAction",
    "AMotionEvent_getPointerId",
    "AMotionEvent_getX",
    "AMotionEvent_getRawX",
    "AMotionEvent_getY",
    "AMotionEvent_getRawY",
    "AMotionEvent_getPointerCount",
    "AConfiguration_new",
    "AConfiguration_fromAssetManager",
    "AConfiguration_getLanguage",
    "AConfiguration_getCountry",
    "ALooper_prepare",
    "ALooper_addFd",
    "AInputQueue_detachLooper",
    "AConfiguration_delete",
    "AInputQueue_attachLooper",
    NULL
};

const char *sles_symbols[] = {
    "slQueryNumSupportedEngineInterfaces",
    "slCreateEngine",
    "slQuerySupportedEngineInterfaces",
    "SL_IID_ENGINE",
    "SL_IID_BUFFERQUEUE",
    "SL_IID_VOLUME",
    "SL_IID_PLAY",
    NULL
};

const char *math_symbols[] = {
    "acos",
    "acosf",
    "acosh",
    "acoshf",
    "acoshl",
    "acosl",
    "asin",
    "asinf",
    "asinh",
    "asinhf",
    "asinhl",
    "asinl",
    "atan",
    "atan2",
    "atan2f",
    "atan2l",
    "atanf",
    "atanh",
    "atanhf",
    "atanhl",
    "atanl",
    "cabsl",
    "cbrt",
    "cbrtf",
    "cbrtl",
    "ceil",
    "ceilf",
    "ceill",
    "copysign",
    "copysignf",
    "copysignl",
    "cos",
    "cosf",
    "cosh",
    "coshf",
    "coshl",
    "cosl",
    "cprojl",
    "csqrtl",
    "drem",
    "dremf",
    "erf",
    "erfc",
    "erfcf",
    "erfcl",
    "erff",
    "erfl",
    "exp",
    "exp2",
    "exp2f",
    "exp2l",
    "expf",
    "expl",
    "expm1",
    "expm1f",
    "expm1l",
    "fabs",
    "fabsf",
    "fabsl",
    "fdim",
    "fdimf",
    "fdiml",
    "feclearexcept",
    "fedisableexcept",
    "feenableexcept",
    "fegetenv",
    "fegetexcept",
    "fegetexceptflag",
    "fegetround",
    "feholdexcept",
    "feraiseexcept",
    "fesetenv",
    "fesetexceptflag",
    "fesetround",
    "fetestexcept",
    "feupdateenv",
    "finite",
    "finitef",
    "floor",
    "floorf",
    "floorl",
    "fma",
    "fmaf",
    "fmal",
    "fmax",
    "fmaxf",
    "fmaxl",
    "fmin",
    "fminf",
    "fminl",
    "fmod",
    "fmodf",
    "fmodl",
    "frexp",
    "frexpf",
    "frexpl",
    "gamma",
    "gammaf",
    "gammaf_r",
    "gamma_r",
    "hypot",
    "hypotf",
    "hypotl",
    "ilogb",
    "ilogbf",
    "ilogbl",
    "j0",
    "j0f",
    "j1",
    "j1f",
    "jn",
    "jnf",
    "ldexpf",
    "ldexpl",
    "lgamma",
    "lgammaf",
    "lgammaf_r",
    "lgammal",
    "lgammal_r",
    "lgamma_r",
    "llrint",
    "llrintf",
    "llrintl",
    "llround",
    "llroundf",
    "llroundl",
    "log",
    "log10",
    "log10f",
    "log10l",
    "log1p",
    "log1pf",
    "log1pl",
    "log2",
    "log2f",
    "log2l",
    "logb",
    "logbf",
    "logbl",
    "logf",
    "logl",
    "lrint",
    "lrintf",
    "lrintl",
    "lround",
    "lroundf",
    "lroundl",
    "modf",
    "modff",
    "modfl",
    "nan",
    "nanf",
    "nanl",
    "nearbyint",
    "nearbyintf",
    "nearbyintl",
    "nextafter",
    "nextafterf",
    "nextafterl",
    "nexttoward",
    "nexttowardf",
    "nexttowardl",
    "pow",
    "powf",
    "powl",
    "remainder",
    "remainderf",
    "remainderl",
    "remquo",
    "remquof",
    "remquol",
    "rint",
    "rintf",
    "rintl",
    "round",
    "roundf",
    "roundl",
    "scalb",
    "scalbf",
    "scalbln",
    "scalblnf",
    "scalblnl",
    "scalbn",
    "scalbnf",
    "scalbnl",
    "__signbit",
    "__signbitf",
    "__signbitl",
    "signgam",
    "significand",
    "significandf",
    "significandl",
    "sin",
    "sincos",
    "sincosf",
    "sincosl",
    "sinf",
    "sinh",
    "sinhf",
    "sinhl",
    "sinl",
    "sqrt",
    "sqrtf",
    "sqrtl",
    "tan",
    "tanf",
    "tanh",
    "tanhf",
    "tanhl",
    "tanl",
    "tgamma",
    "tgammaf",
    "tgammal",
    "trunc",
    "truncf",
    "truncl",
    "y0",
    "y0f",
    "y1",
    "y1f",
    "yn",
    "ynf",
    NULL
};

#endif